#!/bin/sh

TSKBKP="$HOME"/.cache/tsk/tasks.csv.bkp
TSKDONE="$HOME"/.cache/tsk/tasks_done.csv
TSKFILE="$HOME"/.cache/tsk/tasks.csv

set -u

main() {
	trap '' 2

	while true; do
		printf 'tsk> ' && read -r args
		# shellcheck disable=SC2086
		set -- $args

		if test "$#" -lt 1; then
			continue
		fi

		com="$1" && shift
		case "$com" in
		"do")
			if tskdo "$1"; then
				tail -n 1 "$TSKDONE"
			fi
			;;
		add)
			printf 'assignee: ' && read -r assignee
			printf 'task name: ' && read -r name
			printf 'category: ' && read -r category
			printf 'due date: ' && read -r due

			tskadd "$assignee" "$name" "$category" "$due" "$(date +%y%m%d%H)"
			;;
		edit) vi "$TSKFILE" ;;
		exit) exit 0 ;;
		ls)
			tskls
			;;
		*) echo 'tsk: option not recognized' >&2 ;;
		esac

	done

	trap 2

}

tskls() {
	cp "$TSKFILE" "$TSKBKP"

	hdr="ID,Assignee,Task name,Category,Due,Created"
	sep="==,========,=========,========,===,======="
	sorted="$(sort -t, -k 4 "$TSKBKP")"

	printf "%s\n%s\n%s\n" "$hdr" "$sep" "$sorted" | column -s, -t

	echo "$sorted" >"$TSKFILE"
}

tskadd() {
	_date="$(date +%y%m%d%H%M%S)"
	hash="$(echo "$_date" | md5sum | head -c 5)"
	echo "$hash,$1,$2,$3,$4,$_date" >>"$TSKFILE"
}

tskdo() {
	if test "$#" -eq 0; then
		return 1
	fi

	filter="$1"
	task="$(grep "$filter" "$TSKFILE")"

	cp "$TSKFILE" "$TSKBKP"
	grep -v "$filter" "$TSKBKP" >"$TSKFILE"

	printf "[%s]: %s\n" "$(date)" "$task" >>"$TSKDONE"
}

main "$@"
