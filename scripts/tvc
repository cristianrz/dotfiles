#!/bin/sh

set -ue

die() {
	echo "E: $*"
	exit 1
}

commit() {
	if test "$#" -eq 0; then
		return 0
	fi

	printf "Enter a commit name: "
	read -r name

	date="$(date +%Y-%m-%d\ %H:%M:%S)"
	hash="$(echo "$name$date" | md5sum | cut -d ' ' -f 1)"
	commit="$date,$hash,$name"

	if test "$1" = '.'; then
		tar -czf .tvc/"$hash".tgz "$(ls -A --ignore=.tvc)"
	else
		tar -czf .tvc/"$hash".tgz $*
	fi

	echo "$commit" >> .tvc/versions
}

help() {
	printf "usage: tvc <command> [<args>]\\n"
	printf "\\tinit    Create an empty tvc repository\\n"
	printf "\\tcommit  Record changes to the repository\\n"
	printf "\\tlog     Show commit logs\\n"
}

checkout() {
	dir="$(mktemp -d)"
	tar -xzf .tvc/"$1".tgz -C "$dir"

	contents="$(ls -A1 --ignore=.tvc)"

	if test -n "$contents"; then
		rm -r "$contents"
	fi

	cp -r "$dir"/. .
	rm -r "$dir"
}

main() {
	if test "$#" -eq 0; then
		help
		exit
	fi

	subcommand="$1"
	shift

	case "$subcommand" in
		init)
			mkdir -p .tvc
			touch .tvc/versions
			echo "Initialised empty tvc repository in $PWD/.tvc"
			;;

		commit)
			commit "$@"
			echo "Committed \"$name\""
			;;

		checkout)
			printf "Your files: "
			ls -A --ignore=.tvc
			printf "\\nwill be lost, do you want to continue? (y/N) "
			read -r response
			if test "$response" != "y"; then
				die "Aborted by the user"
			fi

			checkout "$@"
			echo "Checked out successfully."
			;;

		log)
			tac .tvc/versions | sed 's/$/\n/g; s/,/\n\t/g' | less -X -F
			;;

		show)
			dir=/tmp/"$1"
			hash_prev="$(tac .tvc/versions | grep "$1" -A 1 | tail -n 1 | cut -d ',' -f 2)"
			dir_prev=/tmp/"$hash_prev"

			if test -d "$dir"; then
				rm -r "$dir"
			fi
			mkdir "$dir"

			if test -d "$dir_prev"; then
				rm -r "$dir_prev"
			fi
			mkdir "$dir_prev"

			tar -xzf .tvc/"$1".tgz -C "$dir"
			tar -xzf .tvc/"$hash_prev".tgz -C "$dir_prev"

			diff "$dir_prev" "$dir" --color
			;;

		rollback)
			checkout "$1"
			msg="$(grep "$1" .tvc/versions | cut -d ',' -f 3)"
			echo "Roll back to $msg" | commit .
			;;
		*)
			help
			;;

	esac
}
